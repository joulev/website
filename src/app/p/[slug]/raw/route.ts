import { notFound } from "next/navigation";

import { getSnippet } from "../get-snippet";
import type { RouteHandler } from "./$types";

// Credit: GPT-4 Turbo
const mimeTypes: Record<string, string> = {
  abap: "text/plain",
  "actionscript-3": "application/x-actionscript",
  ada: "text/x-ada",
  apache: "text/plain",
  apex: "text/plain",
  apl: "text/plain",
  applescript: "text/applescript",
  ara: "text/plain",
  asm: "text/x-asm",
  astro: "text/plain",
  awk: "application/x-awk",
  ballerina: "text/plain",
  bash: "application/x-sh",
  bat: "application/x-bat",
  batch: "application/x-bat",
  be: "text/plain",
  beancount: "text/plain",
  berry: "text/plain",
  bibtex: "application/x-bibtex",
  bicep: "text/plain",
  blade: "text/x-blade",
  c: "text/x-c",
  "c#": "text/x-csharp",
  "c++": "text/x-c++src",
  cadence: "text/plain",
  cdc: "text/plain",
  clarity: "text/plain",
  clj: "text/x-clojure",
  clojure: "text/x-clojure",
  cmake: "text/x-cmake",
  cmd: "application/cmd",
  cobol: "text/x-cobol",
  codeql: "text/plain",
  coffee: "text/coffeescript",
  coffeescript: "text/coffeescript",
  console: "text/plain",
  cpp: "text/x-c++src",
  cql: "text/plain",
  crystal: "text/x-crystal",
  cs: "text/x-csharp",
  csharp: "text/x-csharp",
  css: "text/css",
  csv: "text/csv",
  cue: "text/plain",
  cypher: "application/x-cypher-query",
  d: "text/x-d",
  dart: "application/dart",
  dax: "text/plain",
  diff: "text/x-diff",
  docker: "text/plain",
  dockerfile: "text/x-dockerfile",
  "dream-maker": "text/plain",
  elixir: "text/x-elixir",
  elm: "text/x-elm",
  erb: "application/x-erb",
  erl: "text/x-erlang",
  erlang: "text/x-erlang",
  "f#": "text/x-fsharp",
  fish: "application/x-fish-shell",
  fs: "text/x-fsharp",
  fsharp: "text/x-fsharp",
  fsl: "text/plain",
  gdresource: "text/plain",
  gdscript: "text/plain",
  gdshader: "text/plain",
  gherkin: "text/x-gherkin",
  "git-commit": "text/plain",
  "git-rebase": "text/plain",
  gjs: "text/plain",
  "glimmer-js": "text/plain",
  "glimmer-ts": "text/plain",
  glsl: "text/x-glsl",
  gnuplot: "text/x-gnuplot",
  go: "text/x-go",
  gql: "application/graphql",
  graphql: "application/graphql",
  groovy: "text/x-groovy",
  gts: "text/plain",
  hack: "text/x-hack",
  haml: "text/x-haml",
  handlebars: "text/x-handlebars-template",
  haskell: "text/x-haskell",
  hbs: "text/x-handlebars-template",
  hcl: "text/x-hcl",
  hjson: "application/hjson",
  hlsl: "text/plain",
  hs: "text/x-haskell",
  html: "text/html",
  http: "message/http",
  imba: "text/plain",
  ini: "text/plain",
  jade: "text/x-pug",
  java: "text/x-java-source",
  javascript: "application/javascript",
  jinja: "text/plain",
  jison: "text/plain",
  js: "application/javascript",
  json: "application/json",
  json5: "application/json5",
  jsonc: "application/jsonc",
  jsonl: "application/x-ndjson",
  jsonnet: "application/jsonnet",
  jssm: "text/plain",
  jsx: "text/jsx",
  julia: "text/x-julia",
  kotlin: "text/x-kotlin",
  kql: "text/plain",
  kt: "text/x-kotlin",
  kts: "text/x-kotlin",
  kusto: "text/plain",
  latex: "application/x-latex",
  less: "text/x-less",
  liquid: "text/plain",
  lisp: "text/x-lisp",
  logo: "text/plain",
  lua: "text/x-lua",
  make: "text/x-makefile",
  makefile: "text/x-makefile",
  markdown: "text/markdown",
  marko: "text/x-marko",
  matlab: "text/x-matlab",
  md: "text/markdown",
  mdc: "text/plain",
  mdx: "text/x-mdx",
  mermaid: "text/plain",
  mojo: "text/plain",
  nar: "text/plain",
  narrat: "text/plain",
  nextflow: "text/plain",
  nf: "text/plain",
  nginx: "text/nginx",
  nim: "text/x-nim",
  nix: "text/x-nix",
  nu: "text/plain",
  nushell: "text/plain",
  objc: "text/x-objectivec",
  "objective-c": "text/x-objectivec",
  "objective-cpp": "text/x-objective-c++",
  ocaml: "text/x-ocaml",
  pascal: "text/x-pascal",
  perl: "text/x-perl",
  perl6: "application/x-perl6",
  php: "application/x-httpd-php",
  plsql: "text/x-plsql",
  postcss: "text/x-postcss",
  powerquery: "text/plain",
  powershell: "application/x-powershell",
  prisma: "text/plain",
  prolog: "text/x-prolog",
  properties: "text/x-java-properties",
  proto: "text/x-protobuf",
  ps: "application/postscript",
  ps1: "application/x-powershell",
  pug: "text/x-pug",
  puppet: "text/x-puppet",
  purescript: "text/x-purescript",
  py: "text/x-python",
  python: "text/x-python",
  ql: "text/plain",
  r: "text/x-rsrc",
  raku: "text/x-raku",
  razor: "text/x-cshtml",
  rb: "text/x-ruby",
  reg: "text/plain",
  rel: "text/plain",
  riscv: "text/plain",
  rs: "text/rust",
  rst: "text/x-rst",
  ruby: "text/x-ruby",
  rust: "text/rust",
  sas: "text/x-sas",
  sass: "text/x-sass",
  scala: "text/x-scala",
  scheme: "text/x-scheme",
  scss: "text/x-scss",
  sh: "application/x-sh",
  shader: "text/plain",
  shaderlab: "text/plain",
  shell: "application/x-sh",
  shellscript: "application/x-sh",
  shellsession: "text/plain",
  smalltalk: "text/x-stsrc",
  solidity: "text/x-solidity",
  sparql: "application/sparql-query",
  spl: "text/plain",
  splunk: "text/plain",
  sql: "application/x-sql",
  "ssh-config": "text/plain",
  stata: "text/plain",
  styl: "text/stylus",
  stylus: "text/stylus",
  svelte: "text/x-svelte",
  swift: "text/x-swift",
  "system-verilog": "text/x-systemverilog",
  tasl: "text/plain",
  tcl: "text/x-tcl",
  tex: "application/x-tex",
  toml: "application/toml",
  ts: "application/typescript",
  tsx: "text/tsx",
  turtle: "text/turtle",
  twig: "text/x-twig",
  typescript: "application/typescript",
  v: "text/plain",
  vb: "text/x-vb",
  verilog: "text/x-verilog",
  vhdl: "text/x-vhdl",
  vim: "text/x-vim",
  viml: "text/x-vim",
  vimscript: "text/x-vim",
  vue: "text/x-vue",
  "vue-html": "text/x-vue",
  vy: "text/plain",
  vyper: "text/x-vyper",
  wasm: "application/wasm",
  wenyan: "text/plain",
  wgsl: "text/plain",
  wl: "text/plain",
  wolfram: "text/plain",
  xml: "application/xml",
  xsl: "application/xml",
  yaml: "text/yaml",
  yml: "text/yaml",
  zenscript: "text/plain",
  zig: "text/zig",
  zsh: "application/x-zsh",
  文言: "text/plain",
};

export const GET: RouteHandler = async (_, { params }) => {
  const snippet = await getSnippet(params.slug);
  if (!snippet) notFound();
  return new Response(snippet.code, {
    headers: {
      "Content-Type": mimeTypes[snippet.language] || "text/plain",
      "Cache-Control": "public, max-age=31536000, immutable",
      "Access-Control-Allow-Origin": "*",
      "Access-Control-Allow-Methods": "GET, OPTIONS",
      "Access-Control-Allow-Headers": "Content-Type",
    },
  });
};

export const revalidate = 0;
export const runtime = "edge";
